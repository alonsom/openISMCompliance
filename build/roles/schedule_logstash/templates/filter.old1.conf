input {
  beats {
    port => "5044"
  }
}

filter {
  translate {
    field => "[winlog][event_data][ProcessName]"
	destination => "[IsApprovedService]"
	exact => false
	dictionary_path => "{{logstash_config_path}}/windows_approved_executables.yml" 
    fallback => "NonWhitelisted"
  }
  translate {
    field => "[winlog][event_data][CallerProcessName]"
	destination => "[IsWhitelisted]"
	exact => false
	dictionary_path => "{{logstash_config_path}}/windows_approved_executables.yml" 
    fallback => "NonWhitelisted"
  }
}

output {
  file {
    path => "{{logs_path}}/windows-logs-%{+YYYY-MM-dd}.log"
#	gzip => true
  }
  }
  if ([computer_name]== "DESKTOP-G07RLH1" or [winlog][computer_name]== "DESKTOP-G07RLH1") and
      [winlog][provider_name] == "MsiInstaller" and 
      [winlog][event_id] == "1040" and
      [winlog][event_data][param1]!="Nonoe.msi"
#      ( ([winlog][provider_name] == "WinEventLog" and 
#         [winlog][event_id] == "4688" 
#		 and
#		 [NonWhitelisted]
#		)
#		or
#        ([winlog][provider_name] == "MsiInstaller" and
#         [winlog][event_id] == "1040" 
#		 and
#		 !([winlog][event_data][param1] ~= ".*AvastBrowserUpdateHelper.msi")
#	   )
  {
    file {
      path => "./logs/windows-1040-violation-%{+YYYY-MM-dd}.log.gzip"
#    gzip => true
    }
    exec {
#      command => "ansible-playbook blacklist.yml --extra-vars \"host=%{winlog.computer_name} process=%{winlog.event_data.ProcessName}\""
       command => "dir >> \"./logs/test\""
    }
  }
}